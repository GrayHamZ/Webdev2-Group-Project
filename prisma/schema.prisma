// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  bookings  Booking[]
  createdAt DateTime  @default(now())
}

model Room {
  id        Int       @id @default(autoincrement())
  name      String    // e.g. "Ocean View Suite"
  type      String    // e.g. "Deluxe", "Standard"
  price     Float
  bookings  Booking[]
}

model Villa {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  image       String
  bedrooms    Int
  bathrooms   Int
  guests      Int
  amenities   String 
  bookings     VillaBooking[]
  availability BookingDate[]
}

model Post {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  author   String
  date     DateTime
  priority Priority
}

model Booking {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    Int
  checkIn   DateTime
  checkOut  DateTime
  createdAt DateTime  @default(now())
}

model VillaBooking {
  id         Int           @id @default(autoincrement())
  villaId    Int
  villa      Villa         @relation(fields: [villaId], references: [id])
  guestName  String
  guestEmail String
  guestPhone String
  checkIn    DateTime
  checkOut   DateTime
  guests     Int
  totalPrice Int
  status     BookingStatus
  createdAt  DateTime      @default(now())
  notes      String?
}

model BookingDate {
  id        Int     @id @default(autoincrement())
  villaId   Int
  villa     Villa   @relation(fields: [villaId], references: [id])
  date      DateTime
  available Boolean @default(true)
  price     Int
  isBlocked Boolean @default(false)
}

// Enums
enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}